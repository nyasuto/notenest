name: CI

on:
  push:
    branches:
      - main
      - 'feat/**'
      - 'fix/**'
      - 'docs/**'
  pull_request:
    branches:
      - main

jobs:
  python-quality:
    name: Python Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: ${{ runner.os }}-python-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"

      - name: Run format check
        run: |
          . .venv/bin/activate
          make format-check

      - name: Run lint
        run: |
          . .venv/bin/activate
          make lint

      - name: Run tests with coverage
        run: |
          . .venv/bin/activate
          make test-cov

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        if: always()
        with:
          file: ./htmlcov/index.html
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/web/frontend/package-lock.json

      - name: Install dependencies
        run: make web-install

      - name: Build frontend
        run: make web-build

      - name: Check build output
        run: |
          if [ ! -d "src/web/frontend/dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          echo "Build successful: dist directory exists"

  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [python-quality, frontend-build]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.python-quality.result }}" != "success" ] || [ "${{ needs.frontend-build.result }}" != "success" ]; then
            echo "One or more CI jobs failed"
            exit 1
          fi
          echo "All CI jobs passed successfully"
